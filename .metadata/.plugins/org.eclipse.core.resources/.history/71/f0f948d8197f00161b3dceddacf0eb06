/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dao;
import db.DBUtils;
import java.sql.Connection;  
import java.sql.DriverManager;  
import java.sql.ResultSet;  
import java.sql.Statement; 
import model.User;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.LinkedList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.servlet.http.HttpServletRequest;
import model.Profile;
/**
 *
 * @author Student
 */
public class DataAccess 
{

    public static int updateUserProfile(Profile profile, String sql) throws SQLException, ClassNotFoundException 
    {
        int i = 0;
        Connection conn = DBUtils.getConnection();
        PreparedStatement stmt = DBUtils.getPreparedSatement(sql);
        stmt.setString(1, profile.getId());
        stmt.setString(2, profile.getFname());
        stmt.setString(3, profile.getLname());
        stmt.setString(4, profile.getOccupation());
        stmt.setString(5, profile.getAddress1());
        stmt.setString(6, profile.getAddress2());
        stmt.setString(7, profile.getCity());
        stmt.setString(8, profile.getPostalCode());
        stmt.setString(9, profile.getPhone());
        stmt.setString(10, profile.getEmail());
        stmt.setString(11, profile.getHighest_degree());
        stmt.setString(12, profile.getInst1());
        stmt.setString(13, profile.getMajor1_1());
        stmt.setString(14, profile.getMajor1_2());
        stmt.setString(15, profile.getHighest_degree_year());
        stmt.setString(16, profile.getDegree2());
        stmt.setString(17, profile.getInst2());
        stmt.setString(18, profile.getMajor2_1());
        stmt.setString(19, profile.getMajor2_2());
        stmt.setString(20, profile.getDegree2Year());
        stmt.setString(21, profile.getSchool());
        stmt.setString(22, profile.getSchool_year());
        stmt.setString(23, profile.getJob1());
        stmt.setString(24, profile.getJob1Company());
        stmt.setString(25, profile.getJob1Year());
        stmt.setString(26, profile.getJob2());
        stmt.setString(27, profile.getJob2Company());
        stmt.setString(28, profile.getJob2Year());
        stmt.setString(29, profile.getSkill1());
        stmt.setString(30, profile.getSkill2());
        stmt.setString(31, profile.getSkill3());
        stmt.setString(32, profile.getSkill4());
        stmt.setString(33, profile.getSkill5()); 
        stmt.setString(34, profile.getRefName1());
        stmt.setString(35, profile.getRefEmail1());
        stmt.setString(36, profile.getRefName2());
        stmt.setString(37, profile.getRefEmail2());
        stmt.setString(38, profile.getCurrentCompany());
        
        i = stmt.executeUpdate();
        return i;
    }

    public static void updateProfile(Profile p, String sql) throws ClassNotFoundException {
        try {
            
            PreparedStatement stmt = DBUtils.getPreparedSatement(sql);
            
            
            ResultSet resulSet = DBUtils.getPreparedSatement("select * from Profiles ").executeQuery();
            LinkedList<String> arrID =new LinkedList<String>();
    		while(resulSet.next())
    		{
    		    if(!(arrID.contains(resulSet.getString(1))))
    		    {
    			   arrID.add(resulSet.getString(1));
    			 
    		    }
    		}
    		
    		if(arrID.contains(p.getId()))
    		{
    
    			DBUtils.getPreparedSatement("DELETE * from Profiles WHERE ID = '"+p.getId() +"'").executeQuery();
    		}
            
    		
            
            
            
            if(p.getId() !="" || p.getFname() !="" || p.getLname() !="" || p.getOccupation() !=""  || p.getCurrentCompany() !="" ||
                    p.getAddress1()!="" || p.getAddress2() !="" || p.getCity() !=""  || p.getPostalCode() !="" || p.getPhone() !="" || p.getEmail() !="" )
            {
                
                stmt.setString(1, p.getId());
                stmt.setString(2, p.getFname());
                stmt.setString(3, p.getLname());
                stmt.setString(4, p.getOccupation());
                stmt.setString(5, p.getCurrentCompany());
                stmt.setString(6, p.getAddress1());
                stmt.setString(7, p.getAddress2());
                stmt.setString(8, p.getCity());
                stmt.setString(9, p.getPostalCode());
                stmt.setString(10, p.getPhone());
                stmt.setString(11, p.getEmail());
                
                System.out.println( p.getId()+" "+p.getFname() + " "+ p.getLname() +" "+p.getOccupation()+" "+ " " + p.getCurrentCompany()+ " " +
                        p.getAddress1() + " " + p.getAddress2() + " " + p.getCity() + " "+ p.getPostalCode() +" "+ p.getPhone() + " " + p.getEmail());
                stmt.executeUpdate();
                System.out.println("data-access");
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        System.out.println("Profile Added");
    }
    
    public void addNewUser(User user) throws ClassNotFoundException,SQLException
    {
    	if(user.getUserID()!="" || user.getFirstName()!="" || user.getEmail()!="" || user.getPassWord()!="" || user.getAccountType()!="")
    	{
	        PreparedStatement ps=DBUtils.getPreparedSatement("insert into Pending_Users values(?,?,?,?,?,?)");
	        ps.setString(1, user.getUserID());
	        ps.setString(2, user.getFirstName());
	        ps.setString(3, user.getLastName());
	        ps.setString(4, user.getEmail());
	        ps.setString(5, user.getPassWord());
	        ps.setString(6, user.getAccountType());
	        
	        ps.executeUpdate();
    	}
    }
    
    public boolean loginUser(String id,String password,HttpServletRequest request) throws ClassNotFoundException, SQLException 
    {
    	ResultSet logUsers = DBUtils.getPreparedSatement("select * from Users WHERE ID ='"+id+"'").executeQuery();
	    
	    if((logUsers.next()))
	    {
	    	if(logUsers.getString(5).equals(password))
	    	{
	    		//System.out.println("Welcome "+logUsers.getString(2));
	    		return true;
	    	}
	    	else
	    	{
	    		//System.out.println("Incorrect Password: "+password+" , "+logUsers.getString(2)+" make sure you typing the correct password.");
	    		request.getSession().setAttribute("error_message","Incorrect Password");
	    		return false;
	    	}
	    }
	    else
	    {
	    	System.out.println("User "+id+" does not exists in the system please register!");
	    	request.getSession().setAttribute("error_message","User "+id+" does not exists in the system!");
	    }
	    
	    return  false;
    }
    
    public void addUser(User user) throws ClassNotFoundException,SQLException
    {
    	if(user.getUserID()!="" || user.getFirstName()!="" || user.getEmail()!="" || user.getPassWord()!="" || user.getAccountType()!="")
    	{
	        PreparedStatement ps=DBUtils.getPreparedSatement("insert into Users values(?,?,?,?,?,?)");
	        ps.setString(1, user.getUserID());
	        ps.setString(2, user.getFirstName());
	        ps.setString(3, user.getLastName());
	        ps.setString(4, user.getEmail());
	        ps.setString(5, user.getPassWord());
	        ps.setString(6, user.getAccountType());
	        
	        ps.executeUpdate();
    	}
    }
    
    public void rejectedUser(String data)
    {
    	
    	try 
    	{
			ResultSet rs=DBUtils.getPreparedSatement("select * from Pending_Users WHERE ID ='"+data+"'").executeQuery();
			
		    rs.next();
		    
			//System.out.println(rs.getString(1)+" "+rs.getString(2)+" "+rs.getString(3)+" "+rs.getString(4)+" "+rs.getString(5)+" "+rs.getString(6));
			
		    ResultSet rejectedusers=DBUtils.getPreparedSatement("select * from Rejected_Users WHERE ID ='"+data+"'").executeQuery();
		    
		    if(!(rejectedusers.next()))
		    {
		
			//Adding the user to the reject user database
		    
				PreparedStatement ps=DBUtils.getPreparedSatement("insert into Rejected_Users values(?,?,?,?,?,?)");
		        ps.setString(1, rs.getString(1));
		        ps.setString(2, rs.getString(2));
		        ps.setString(3, rs.getString(3));
		        ps.setString(4, rs.getString(4));
		        ps.setString(5, rs.getString(5));
		        ps.setString(6, rs.getString(6));
		        
		        ps.executeUpdate();
    	    }
		    
	        //Deleting the user from the pending users databse
	        //ResultSet deleteUser=DBUtils.getPreparedSatement("Delete from Pending_Users WHERE ID ='"+data+"'");
	        
	        Statement stmt = DBUtils.getConnection().createStatement();
	        String SQL = "Delete from Pending_Users WHERE ID ='"+data+"'";
	        stmt.executeUpdate(SQL);
                System.out.println(data+" "+"was rejected");
	        System.out.println("Removed From Pending Users and Added to Rejected Users db!");
	        
			
		}
    	catch (ClassNotFoundException | SQLException e) 
    	{
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
    }
    
    public void deleteUser(String data)
    {
    	System.out.println(data+" "+"was deleted");
    	
    		    
	        //Deleting the user from the users databse
	        //ResultSet deleteUser=DBUtils.getPreparedSatement("Delete from Users WHERE ID ='"+data+"'");
	        
	        Statement stmt=null;
        try {
            stmt = DBUtils.getConnection().createStatement();
        } catch (SQLException ex) {
            Logger.getLogger(DataAccess.class.getName()).log(Level.SEVERE, null, ex);
        }
	        String SQL = "Delete from Users WHERE ID ='"+data+"'";
        try {
            stmt.executeUpdate(SQL);
        } catch (SQLException ex) {
            Logger.getLogger(DataAccess.class.getName()).log(Level.SEVERE, null, ex);
        }
	        System.out.println("Removed From Users ");
	        
			
	
		
    }

    public void acceptedUser(String data)
    {
    	System.out.println(data+" "+"was Accepted");
    	
    	try 
    	{
			ResultSet rs=DBUtils.getPreparedSatement("select * from Pending_Users WHERE ID ='"+data+"'").executeQuery();
			
		    rs.next();
		    
			//System.out.println(rs.getString(1)+" "+rs.getString(2)+" "+rs.getString(3)+" "+rs.getString(4)+" "+rs.getString(5)+" "+rs.getString(6));
			
		    ResultSet users=DBUtils.getPreparedSatement("select * from Users WHERE ID ='"+data+"'").executeQuery();
		    
		    if(!(users.next()))
		    {
		
			//Adding the user to the reject user database
		    
				PreparedStatement ps=DBUtils.getPreparedSatement("insert into Users values(?,?,?,?,?,?)");
		        ps.setString(1, rs.getString(1));
		        ps.setString(2, rs.getString(2));
		        ps.setString(3, rs.getString(3));
		        ps.setString(4, rs.getString(4));
		        ps.setString(5, rs.getString(5));
		        ps.setString(6, rs.getString(6));
		        
		        ps.executeUpdate();
    	    }
		    
	        //Deleting the user from the pending users databse
	        //ResultSet deleteUser=DBUtils.getPreparedSatement("Delete from Pending_Users WHERE ID ='"+data+"'");
	        
	        Statement stmt = DBUtils.getConnection().createStatement();
	        String SQL = "Delete from Pending_Users WHERE ID ='"+data+"'";
	        stmt.executeUpdate(SQL);
	        System.out.println("Removed From Pendind Users and Added to Users db!");
	        
			
		}
    	catch (ClassNotFoundException | SQLException e) 
    	{
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    }
    
    

    
    public static List<User> getAll()
    {
    	ResultSet rs=null;
        List<User> usersList=new LinkedList<User>();
        try {
			rs=DBUtils.getPreparedSatement("select * from Users").executeQuery();
		} catch (ClassNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
        try {
			while(rs.next())
			{
			    User ps=null;
				try 
				{
					ps = new User(rs.getString(1),(rs.getString(2)),(rs.getString(3)),(rs.getString(4)),(rs.getString(5)),(rs.getString(6)));
				} 
				catch (SQLException e) 
				{
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			    usersList.add(ps);
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
        
        return usersList;
    }
   
}
